{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js"],"names":["echarts","zrUtil","graphic","extendComponentView","type","render","gridModel","ecModel","this","group","removeAll","get","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","registerPreprocessor","option","xAxis","yAxis","grid","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","extend","axis","init","superApply","arguments","resetRange","mergeOption","restoreData","getCoordSysModel","queryComponents","mainType","index","gridIndex","id","gridId","getAxisType","axisDim","data","merge","prototype","extraOption","offset","_default","module","exports","_config","_util","__DEV__","isObject","each","map","indexOf","_layout","retrieve","getLayoutRect","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","_dataStackHelper","getStackedDimension","isAxisUsedInTheGrid","axisModel","Grid","api","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","getAxesOnZeroOf","otherAxisOnZeroOf","otherAxes","onZero","onZeroAxisIndex","canOnZeroToAxis","idx","hasOwnProperty","getOnZeroRecordKey","dim","updateAxisTransform","coordBase","axisExtent","getExtent","axisExtentSum","toGlobalCoord","coord","toLocalCoord","axisPointerEnabled","_rect","update","_updateScale","x","scale","y","resize","ignoreContainLabel","gridRect","getBoxLayoutParams","width","getWidth","height","getHeight","axesList","adjustAxes","isHorizontal","extent","inverse","setExtent","labelUnionRect","margin","position","getAxis","axisType","axisIndex","axesMapOnDim","name","getAxes","slice","getCartesian","xAxisIndex","yAxisIndex","key","i","coordList","length","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","dataToPoint","dataToCoord","convertFromPixel","pointToData","coordToData","seriesModel","xAxisModel","getReferringComponents","yAxisModel","coordsList","componentIndex","containPoint","point","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","axisPosition","isCategory","onBand","push","addAxis","unionExtent","mapDimension","unionExtentFromData","Infinity","eachSeries","isCartesian2D","axesModels","findAxesModels","getData","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","axesTypes","create","grids","dimensions","register","defaultOption","show","zlevel","z","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","tooltip","axisPointer","axisLine","lineStyle","color","symbol","symbolSize","axisTick","inside","axisLabel","rotate","showMinLabel","showMaxLabel","fontSize","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","minorTick","minorSplitLine","timeAxis","min","max","logAxis","logBase","dependencies","layoutMode","containLabel","backgroundColor","borderWidth","borderColor","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","categories","getOrdinalMeta","mergeAll","registerSubTypeDefaulter","curry","_number","round","createGridClipPath","hasAnimation","rect","getArea","lineWidth","clipPath","initProps","createPolarClipPath","polar","sectorArea","Sector","cx","cy","r0","r","startAngle","endAngle","clockwise","createClipPath","coordSys","_dataProvider","retrieveRawValue","getDefaultLabel","dataIndex","labelDims","len","vals","val","join","BoundingRect","Cartesian","call","constructor","getAxesByScale","axisX","axisY","contain","containData","reserved","out","clampData","xScale","yScale","xAxisExtent","yAxisExtent","parse","Math","xExtent","getGlobalExtent","yExtent","inherits","dimAxisMapper","_axes","_dimList","scaleType","toLowerCase","filter","_dataCoordConvert","input","method","dimList","output","Array","Axis","coordExtent","asc","ret","reverse","clamp","AxisBuilder","AxisView","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","payload","oldAxisGroup","_axisGroup","Group","layout","axisBuilder","getGroup","groupTransition","superCall","remove","_splitAreaColors","_splitLine","isBlank","splitLineModel","getModel","lineStyleModel","lineColors","isArray","lineCount","ticksCoords","getTicksCoords","tickModel","p1","p2","getLineStyle","tickCoord","colorIndex","tickValue","Line","anid","subPixelOptimize","x1","y1","x2","y2","stroke","_minorSplitLine","minorSplitLineModel","minorTicksCoords","getMinorTicksCoords","k","_splitArea","splitAreaModel","areaStyleModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","createHashMap","cIndex","prev","getAreaStyle","set"],"mappings":"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","file":"static/js/chunk-42636d0e.8e9d1771.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5,\n  // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Lenght of minor tick\n    length: 3,\n    // Same inside with axisTick\n    // Line style\n    lineStyle: {// Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#eee',\n      width: 1\n    }\n  }\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel) {\n  var rect = cartesian.getArea();\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth;\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(sectorArea.r0, 1),\n      r: round(sectorArea.r, 1),\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = sectorArea.startAngle;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel);\n  }\n\n  return null;\n}\n\nexports.createGridClipPath = createGridClipPath;\nexports.createPolarClipPath = createPolarClipPath;\nexports.createClipPath = createClipPath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _minorSplitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n\n        this._axisGroup.add(new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          subPixelOptimize: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        }));\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});"],"sourceRoot":""}